plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
    id "jacoco"
    id "idea"
}

group "com.github.alexdlaird"
version "1.0.0"

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.google.code.gson:gson:2.8.7"
    implementation "org.yaml:snakeyaml:1.29"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.2"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
        xml.destination = file("build/reports/jacoco/report.xml")
    }
}

publishing {
    publications {
        javaLibrary(MavenPublication) {
            from components.java
            versionMapping {
                usage("java-api") {
                    fromResolutionOf("runtimeClasspath")
                }
                usage("java-runtime") {
                    fromResolutionResult()
                }
            }
            pom {
                name = Project.getName()
                description = "A Java wrapper for ngrok"
                url = "http://github.com/alexdlaird/java-ngrok"
                licenses {
                    license {
                        name = "The MIT License (MIT)"
                        url = "https://github.com/alexdlaird/java-ngrok/blob/master/LICENSE"
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        id = "alexdlaird"
                        name = "Alex Laird"
                        email = "contact@alexlaird.com"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/alexdlaird/java-ngrok.git"
                    developerConnection = "scm:git:ssh://github.com/alexdlaird/java-ngrok.git"
                    url = "http://github.com/alexdlaird/java-ngrok"
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("SONATYPE_USERNAME")
                password = System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    def signingKey = System.getenv("GPG_PRIVATE_KEY")
    def signingPassword = System.getenv("GPG_PASSPHRASE")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.javaLibrary
}

javadoc {
    options.overview = "src/main/java/overview.html"
    options.addStringOption('Xdoclint:none', '-quiet')
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }
}

